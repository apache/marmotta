#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# AccumuloGraph storage configuration
###############################################################################

accumulograph.blueprints.accumulo.zkhosts.description = ZooKeeper hosts string, in the same format as used \
  by ZooKeeperInstance
accumulograph.blueprints.accumulo.zkhosts.type = java.lang.String

accumulograph.blueprints.accumulo.instance.description = Accumulo instance name to use
accumulograph.blueprints.accumulo.instance.type = java.lang.String

accumulograph.blueprints.accumulo.instance.type.description = Instance type to use with Accumulo:Distributed \
  , Mini, Mock
accumulograph.blueprints.accumulo.instance.type.type = java.lang.String

accumulograph.blueprints.accumulo.user.description = Username to use for Accumulo authentication
accumulograph.blueprints.accumulo.user.type = java.lang.String

accumulograph.blueprints.accumulo.password.description = Accumulo password used for authentication
accumulograph.blueprints.accumulo.password.type = java.lang.String

accumulograph.blueprints.accumulo.name.description = Name of the graph to create
accumulograph.blueprints.accumulo.name.type = java.lang.String

accumulograph.blueprints.accumulo.write.max.latency.description =  Maximum wait time before changes are flushed \
  to Accumulo (milliseconds)
accumulograph.blueprints.accumulo.write.max.latency.type = java.lang.Long

accumulograph.blueprints.accumulo.write.max.memory.description =  Maximum memory usage when buffering \
  writes(bytes)
accumulograph.blueprints.accumulo.write.max.memory.type = java.lang.Long

accumulograph.blueprints.accumulo.write.max.threads.description =  Maximum number of threads to use \
  for writing to Accumulo
accumulograph.blueprints.accumulo.write.max.threads.type = java.lang.Integer

accumulograph.blueprints.accumulo.write.timeout.description =  How long to wait before declaring a \
  write failure (milliseconds)
accumulograph.blueprints.accumulo.write.timeout.type = java.lang.Long

accumulograph.blueprints.accumulo.read.queryThreads.description =  Number of Accumulo query threads \
  to use
accumulograph.blueprints.accumulo.read.queryThreads.type = java.lang.Integer

accumulograph.blueprints.accumulo.auto.flush.description =  Whether updates should be immediately \
  flushed to the backing Accumulo store \
  (true) or not (false)
accumulograph.blueprints.accumulo.auto.flush.type = java.lang.Boolean

accumulograph.blueprints.accumulo.create.description = If the graph does not exist, whether it \
  should be created
accumulograph.blueprints.accumulo.create.type = java.lang.Boolean

accumulograph.blueprints.accumulo.clear.description = Whether to clear an existing graph on \
  initialization
accumulograph.blueprints.accumulo.clear.type = java.lang.Boolean

accumulograph.blueprints.accumulo.splits.description = A space-separated, ordered list of \
  splits to be applied to the backing \
  Accumulo table
accumulograph.blueprints.accumulo.splits.type = java.lang.String

accumulograph.blueprints.accumulo.skipExistenceChecks.description = The TinkerPop API defines \
  certain operations should fail \
  if a Vertex or Edge already exists \
  or does not exist.
accumulograph.blueprints.accumulo.skipExistenceChecks.type = java.lang.Boolean

accumulograph.blueprints.accumulo.property.preload.description = Deferred property loading \
  is the default. By setting this \
  configuration value, any keys in the provided \
  property list will be automatically loaded \
  in bulk when it makes sense (i.e., \
  when the system has to make a \
  trip out to Accumulo anyway). Other properties not in the \
  list will continue to be lazily and individually loaded. \
  In order to set this value, \
  you must first define a positive \
  property cache timeout value
accumulograph.blueprints.accumulo.property.preload.type = java.lang.String

accumulograph.blueprints.accumulo.property.preload.all.description = If true, retrieve all \
  properties for elements when \
  retrieving them from Accumulo
accumulograph.blueprints.accumulo.property.preload.all.type = java.lang.Boolean

accumulograph.blueprints.accumulo.propertyCacheTimeout.description = Sets the number of \
  milliseconds since retrieval \
  that a property value will be \
  maintained in a RAM \
  cache before that value is expired
accumulograph.blueprints.accumulo.propertyCacheTimeout.type = java.lang.Integer

accumulograph.blueprints.accumulo.edgeCacheSize.description = Maximum size of the edges' cache
accumulograph.blueprints.accumulo.edgeCacheSize.type = java.lang.Integer

accumulograph.blueprints.accumulo.edgeCacheTimeout.description = The maximum number of milliseconds \
  an Edge should be held in RAM
accumulograph.blueprints.accumulo.edgeCacheTimeout.type = java.lang.Integer

accumulograph.blueprints.accumulo.vertexCacheTimeout.description = The maximum number of milliseconds \
  a Vertex should be held in RAM
accumulograph.blueprints.accumulo.vertexCacheTimeout.type = java.lang.Integer

accumulograph.blueprints.accumulo.vertexCacheSize.description = Maximum size of the vertices' cache
accumulograph.blueprints.accumulo.vertexCacheSize.type = java.lang.Integer

accumulograph.blueprints.accumulo.edge.preload.description = Maximum size of the vertices' cache
accumulograph.blueprints.accumulo.edge.preload.type = java.lang.Integer

accumulograph.blueprints.accumulo.index.auto.description = Whether to automatically index \
  element properties
accumulograph.blueprints.accumulo.index.auto.type = java.lang.Boolean

accumulograph.blueprints.accumulo.index.disable.description = Disables the IndexableGraph functions
accumulograph.blueprints.accumulo.index.disable.type = java.lang.Boolean